# ==============================================================================
# GlocalText Configuration File
#
# This file is the control center for all translation tasks.
# It is structured into several key sections that define reusable components,
# providers, and the specific tasks to be executed.
# ==============================================================================

# (Optional) The root directory of your project. All relative paths in the
# configuration (like in 'source' or 'output') will be resolved from here.
# If not specified, it defaults to the directory where you run the command.
project_root: "."

# ------------------------------------------------------------------------------
#  1. Provider Settings
#
#  Configure your translation providers here. You can define multiple providers
#  and select which one to use for each task.
# ------------------------------------------------------------------------------
providers:
  # Example for Google Gemini
  gemini:
    # API key can be set here, but it's recommended to use environment variables
    # (e.g., GEMINI_API_KEY) for better security.
    api_key: "YOUR_GEMINI_API_KEY" # Or leave empty to use env var
    model: "gemini-1.5-flash"

    # Intelligent scheduling and batching settings to respect API rate limits.
    # All are optional and have sensible defaults.
    rpm: 60 # Requests Per Minute
    tpm: 100000 # Tokens Per Minute
    rpd: 1000 # Requests Per Day
    batch_size: 20 # Number of texts to group in one API call

    # Retry logic for handling transient network errors.
    retry_attempts: 3
    retry_delay: 1.0 # Initial delay in seconds
    retry_backoff_factor: 2.0 # Multiplier for subsequent retries (e.g., 1s, 2s, 4s)

  # Example for Google Gemma (via a local Ollama server, for instance)
  gemma:
    # For local models, the API key might be optional or a specific string.
    # Refer to your local server's documentation.
    api_key: "ollama"
    model: "gemma:7b"
    # The 'extra' field allows passing non-standard options to the provider.
    # For Ollama, you can specify the full server URL.
    extra:
      base_url: "http://localhost:11434/v1"

# ------------------------------------------------------------------------------
#  2. Shortcuts & Rulesets: For reusable configuration
# ------------------------------------------------------------------------------
shortcuts:
  # '.defaults' is a special shortcut that is implicitly inherited by ALL tasks.
  .defaults: &defaults
    translator: "gemini"
    source_lang: "en"
    incremental: true # Enable caching to avoid re-translating unchanged text.
    cache_path: ".glocaltext_cache" # Optional: Specify a central cache directory.

  # A custom shortcut for translating script files.
  .scripts: &scripts
    <<: *defaults # Inherit from .defaults
    source:
      include: ["**/*.sh", "**/*.ps1"]
    extraction_rules:
      - 'echo "([^"]*)"'
      - "echo -e '([^']*)'"
    rules:
      - ruleset: shell-vars-protection # Reference a ruleset defined below.

rulesets:
  # A reusable set of rules to protect shell variables from translation.
  shell-vars-protection:
    - 'protect: \$\w+|\$\{\w+\}' # Protects $VAR and ${VAR}

# ------------------------------------------------------------------------------
#  3. Tasks: The core translation jobs
# ------------------------------------------------------------------------------
tasks:
  - name: "Translate Shell Scripts to Traditional Chinese"
    <<: *scripts # Use the .scripts shortcut
    target_lang: "zh-TW"
    # You can add or override settings from the shortcut.
    rules:
      # 'protect' rules are inherited from the shortcut.
      # All match patterns are treated as Regex. For an exact match, use ^ and $.
      # All 'replace' values (like in '->') support Regex backreferences (e.g., \1).
      - 'skip: ^Don''t translate me$' # Use two single quotes to escape in YAML.
      - '"User: (.*)" -> "使用者: \\1"' # In YAML, backslashes in quotes must be escaped.

  - name: "Translate Markdown Docs to Japanese"
    <<: *defaults # Inherit only the base settings
    target_lang: "ja"
    source:
      include: ["docs/**/*.md"]
      exclude: ["docs/internal/**"] # Exclude specific subdirectories.
    extraction_rules:
      - '`([^`]+)`' # Extract content from inline code blocks.
    output:
      in_place: false # Write to a new directory instead of modifying original files.
      path: "output/ja"
      # Optional: Define a custom filename structure.
      # Placeholders: {stem}, {source_lang}, {target_lang}
      filename: "{stem}.{target_lang}.md"
    # Prompts can be used to add context for the AI translator.
    prompts:
      system: "You are a professional translator specializing in technical documentation."

# ------------------------------------------------------------------------------
#  4. System-Wide Settings
# ------------------------------------------------------------------------------

# Debug options for troubleshooting.
debug_options:
  enabled: false
  log_path: "logs/glocaltext_debug.log" # Optional: Custom path for the debug log.

# Reporting options for the translation summary.
report_options:
  enabled: true
  export_csv: false
  export_dir: "reports" # Directory to save the CSV report if enabled.